---

  - name: Install packages
    apt:
      state: present
      update_cache: yes
      pkg:
        - openvpn
        - easy-rsa
    become: yes

  - name: Install python packages
    shell: |
      pip install "{{ item }}"
    with_items:
      - pexpect
    become: yes

  - name: Init pki folder
    shell:
      cmd: |
        echo yes | ./easyrsa init-pki
      chdir: "{{ openvpn_path_easyrsa }}"
    become: yes

  - name: Create certificates
    ansible.builtin.expect:
      command: ./easyrsa build-ca
      responses:
        'Enter New CA Key Passphrase:\s*$': "{{ openvpn_ca_password }}"
        'Re-Enter New CA Key Passphrase:\s*$': "{{ openvpn_ca_password }}"
        'Common Name .*:\s*$': "{{ openvpn_server_name }}"
      chdir: "{{ openvpn_path_easyrsa }}"
      creates: "{{ openvpn_path_easyrsa }}/pki/private/ca.key"
    become: yes

  - name: Generate request and key
    ansible.builtin.expect:
      command: ./easyrsa gen-req {{ openvpn_server_name }} nopass
      responses:
        'Common Name .*:\s*$': "{{ openvpn_server_name }}"
      chdir: "{{ openvpn_path_easyrsa }}"
      creates: "{{ openvpn_path_easyrsa }}/pki/private/{{ openvpn_server_name }}.key"
    become: yes

  - name: Sign the server key with the CA
    ansible.builtin.expect:
      command: ./easyrsa sign-req server {{ openvpn_server_name }}
      responses:
        '\s*Confirm request details:\s*': "yes"
        'Enter pass phrase for .*:\s*$': "{{ openvpn_ca_password }}"
      chdir: "{{ openvpn_path_easyrsa }}"
      creates: "{{ openvpn_path_easyrsa }}/pki/issued/{{ openvpn_server_name }}.crt"
    become: yes

  - name: Copy certificate to openvpn folder
    copy:
      src: "{{ openvpn_path_easyrsa }}/{{ item }}"
      dest: /etc/openvpn/server/
      remote_src: yes
      owner: root
      group: root
    with_items:
      - pki/ca.crt
      - pki/private/{{ openvpn_server_name }}.key
      - pki/issued/{{ openvpn_server_name }}.crt
    become: yes

  - name: Generate dhparams and ta.key
    shell:
      cmd: |
        openssl dhparam -out /etc/openvpn/server/dh.pem 2048
        openvpn --genkey --secret /etc/openvpn/server/ta.key
    become: yes

  - name: Copy openvpn server config
    template:
      src: templates/openvpn-server.conf
      dest: /etc/openvpn/server/server.conf
    become: yes

  - name: Deploy the OpenVPN service file
    template:
      src: templates/openvpn.service
      dest: /etc/systemd/system/openvpn.service
    notify:
      - Update service configuration
      - Restart the OpenVPN service
    become: yes

  - name: Config accept for requests
    ansible.builtin.iptables:
      chain: FORWARD
      src_range: 172.50.0.0-172.50.0.255
      jump: ACCEPT
    become: yes

  - name: Config forwarding of tun0
    ansible.builtin.iptables:
      chain: FORWARD
      dst_range: 172.50.0.0-172.50.0.255
      match: state
      ctstate: RELATED,ESTABLISHED
      jump: ACCEPT
    become: yes

  - name: Config nat for openvpn
    ansible.builtin.iptables:
      table: nat
      chain: POSTROUTING
      src_range: "172.50.0.0-172.50.0.255"
      dst_range: "!172.50.0.0-172.50.0.255"
      jump: MASQUERADE
    become: yes

  - name: Config ip forwarding
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes
    become: yes

  - name: Save iptables rules
    shell: |
      iptables-save > /etc/iptables.conf
    become: yes

  - name: Restore iptables config on reboot
    ansible.builtin.cron:
      name: "restore iptables"
      special_time: reboot
      job: "sudo iptables-restore < /etc/iptables.conf"
    become: yes
